// Generated by uRequire v0.3.0beta1
(function () {
  var __isAMD = (typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;
(function (root,factory) {
  if (typeof exports === 'object') {
   var nr = new (require('urequire').NodeRequirer) ('classes/skills_bars', module, __dirname, '.');
   module.exports = factory(nr.require, exports, module);
 } else if (typeof define === 'function' && define.amd) {
     define(factory);
 }
})(this,function (require, exports, module) {
  // uRequire: start body of original nodejs module
"use strict";

var skillsBars;

skillsBars = function() {
    function skillsBars(config) {
        var group, name, _ref;
        this.config = config;
        this.bar_width = 300;
        _ref = this.config;
        for (name in _ref) {
            group = _ref[name];
            this.createDom(name, group);
        }
    }
    skillsBars.prototype.getAbilityLevel = function(progress) {
        switch (false) {
          case !(progress <= .3):
            return "basic";
          case !(progress <= .6):
            return "intermediate";
          case !(progress <= .8):
            return "advanced";
          case !(progress <= 1):
            return "expert";
          default:
            return "excellent";
        }
    };
    skillsBars.prototype.createDom = function(name, group) {
        var bar, bar_label, bname, box, cgroup, container, data, frag, item, label, _i, _len;
        container = document.getElementById("skills");
        frag = document.createDocumentFragment();
        cgroup = document.createElement("div");
        cgroup.className = "group " + name;
        cgroup.id = "sk_bar_" + name;
        for (bname in group) {
            data = group[bname];
            for (_i = 0, _len = data.length; _i < _len; _i++) {
                item = data[_i];
                box = document.createElement("div");
                box.className = "box";
                label = document.createElement("label");
                label.className = "label";
                label.innerHTML = item.name;
                bar = document.createElement("div");
                bar.className = "bar " + name;
                bar.dataset.width = this.bar_width * item.progress;
                bar_label = document.createElement("span");
                bar_label.innerHTML = this.getAbilityLevel(item.progress);
                bar.appendChild(bar_label);
                box.appendChild(label);
                box.appendChild(bar);
                cgroup.appendChild(box);
            }
        }
        frag.appendChild(cgroup);
        return container.appendChild(frag);
    };
    skillsBars.prototype.animateBars = function(name) {
        var animate, elems, group;
        group = document.getElementById("sk_bar_" + name);
        if (group.style.disabled === true) {
            return;
        }
        group.style.disabled = true;
        elems = group.getElementsByClassName("box");
        animate = function(opts) {
            var delta, start, timer;
            start = new Date;
            delta = opts.delta;
            return timer = setInterval(function() {
                var progress;
                progress = (new Date - start) / opts.duration;
                if (progress > 1) {
                    progress = 1;
                }
                opts.step(opts.delta(progress));
                if (progress === 1) {
                    clearInterval(timer);
                    return opts.complete && opts.complete();
                }
            }, opts.delay || 13);
        };
        return animate({
            delay: 10,
            duration: 1600,
            delta: function(progress) {
                return Math.pow(progress, 4);
            },
            step: function(delta) {
                var el, _i, _len, _results;
                _results = [];
                for (_i = 0, _len = elems.length; _i < _len; _i++) {
                    el = elems[_i];
                    _results.push(function(el) {
                        var bar, label;
                        bar = el.getElementsByClassName("bar");
                        label = el.getElementsByTagName("span");
                        bar[0].style.width = bar[0].dataset.width * delta + "px";
                        return label[0].style.opacity = delta;
                    }(el));
                }
                return _results;
            }
        });
    };
    skillsBars.prototype.scrollController = function() {
        var header, i, name, obj, p_offset, start, _ref, _results;
        header = document.getElementById("header");
        start = header.scrollHeight - window.innerHeight + 220;
        p_offset = window.pageYOffset || document.body.scrollTop;
        i = 0;
        if (p_offset >= start && p_offset <= 1528) {
            _ref = this.config;
            _results = [];
            for (name in _ref) {
                obj = _ref[name];
                if (p_offset >= start + 450 * i) {
                    this.animateBars(name);
                }
                _results.push(i++);
            }
            return _results;
        }
    };
    return skillsBars;
}();

module.exports = skillsBars;
// uRequire: end body of original nodejs module


return module.exports;
})
})();